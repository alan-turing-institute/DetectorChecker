{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww13060\viewh15860\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs28 \cf0 \ul \ulc0 Phase 1\ulnone \
\
Spatial analysis based on dysfunctional pixel locations\
Can be used for both dead pixels and other categories of dysfunctional pixels
\b0\fs24 \
\
\

\b phase1_PixelReading.R: \

\b0 Reads raw data about damaged pixels from a variety of formats to define mask of dead pixels (Tbin)\
and coordinates of dead pixels (coo.dead) and check if they are consistent with the given Layout\
(i.e. inside the detector and inside the modules)\
\
WORKFLOW: Assumes already run\
     - phase0_Layout.R\
\
INPUT: Layout (object), raw data (currently works for Pilatus (dead pixel mask as tif), To Do: other formats)\
\
OUTPUT: coo.dead (matrix)\
\
GLOBAL FUNCTIONS: inconsistency.dead.layout()\
\
\

\b phase1_LogisticRegression.R\

\b0 Fits logistic regression models with a variety of factors.
\b \

\b0 \
WORKFLOW: Assumes already run \
    - phase0_LayoutPixel.R\
    - phase1_PixelReading.R, including consistency checks there\
\
INPUT: \
     - Tbin (dead pixel mask built in phase1_ReadingPixels), \
     - LayoutPixel (object built in Phase0 for suitable detector type)\
\
OUTPUT: \
     - text file "modelResults_....txt" with summary(model) for a variety of models\
\
\

\b phase1_CountsAngles.R  
\b0 \
Descriptive analysis of damaged pixels including plots of layout with damaged pixels added,\
counts of damaged pixels.\
\
WORKFLOW: Assumes already run (including auxiliary functions)\
    - phase0_LayoutExamples.R (for matching Layout example)\
    - phase0_LayoutVisualisation.R\
    - phase0_LayoutPixel.R (do not run the plots again (to save time))\
    - phase1_ReadingPixels.R, including consistency checks there\
\
INPUT: \
    - coo.dead (dead pixel coordinates built phase1_ReadingPixels)\
    - ppp.edges.col, ppp.edges.row\
    - Layout (object built in Phase0 for suitable detector type)\
    - auxiliary variables for layout (obtained during workflow given above)\
\
OUTPUT: \
    - Plot of damaged pixel locations with underlying detector layout\
    - Plots of layout with damaged pixel counts per module \
    - Rose plots of NN (nearest neighbour) oriented angles for full detector and for individules modules\
    - Damaged pixel locations with NN oriented arrows\
    - Plots comparing DIY and spatstat package function of the previous two (for debugging, see below)\
    - Text file "counts_....txt" with counts in all modules, Chi-square test results, Layout parameters etc.\
\

\b phase1_KFG.R \

\b0 Spatial 
\b \

\b0 \
WORKFLOW: Assumes already run (including auxiliary functions)\
    - phase0_LayoutExamples.R (for matching Layout example)\
    - phase0_LayoutVisualisation.R\
    - phase0_LayoutPixel.R (do not run the plots again, though)\
    - phase1_ReadingPixels.R, including consistency checks there\
\
INPUT: \
    - coo.dead.module (dead pixel coordinates with module indices built phase1_ReadingPixels)\
    - ppp.edges.col, ppp.edges.row\
    - Layout (object built in Phase0 for suitable detector type)\
    - auxiliary variables for layout\
\
0UTPUT: \
    - individual plots of K, F, G functions\
    - plot of all the above on one page along wtih dead pixels shown on detector layout (for reference)\
    - inhomogeneous versions of the above\
\
\
}