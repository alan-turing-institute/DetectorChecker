{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww13060\viewh15860\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs28 \cf0 \ul \ulc0 Phase 0\ulnone \
\
Building detector layout \
Calculating pixel location based values depending on layout
\b0\fs24 \
\
Code flexible enough to work for a variety of detector types\
assumed to consist of a grid of modules with optional gaps allowed in between rows and columns.\
\
\

\b phase0_LayoutExamples.R:\

\b0 Examples of detector layout\
\
INPUT\
Currently as part of R-code:\
- Real world examples: Excalibur, Perkin-Elmer, Pilatus \
- 4 (hypothetical) sample detector set ups \
\
OUTPUT\
 - Layout object\
\

\b \
phase0_LayoutVisualisation.R:\

\b0 Plot showing modules and gaps of detector layout\
\
INPUT:\
- Layout object\
\
OUTPUT\
 - Plot visualising layout\
\

\b \
phase0_LayoutPixel.R:\

\b0 Calculations of pixel specific layout information stored in matrices\
\
INPUT:\
- Layout object\
\
OUTPUT: \
- LayoutPixel object \
- Plots visualising layout depending pixels functions\
\
\

\b\fs28 \
 }